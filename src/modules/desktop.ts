import { isMobile } from "../utils/browser"
import { callOnce } from "../utils/callOnce"

export const isElectron = callOnce((): boolean => {
  // Renderer process
  if (
    typeof window !== "undefined" &&
    typeof window.process === "object" &&
    (window.process as any).type === "renderer"
  ) {
    return true
  }

  // Main process
  if (
    typeof process !== "undefined" &&
    typeof process.versions === "object" &&
    !!(process.versions as any).electron
  ) {
    return true
  }

  // Detect the user agent when the `nodeIntegration` option is set to true
  if (
    typeof navigator === "object" &&
    typeof navigator.userAgent === "string" &&
    navigator.userAgent.indexOf("Electron") >= 0
  ) {
    return true
  }

  return false
})

/**
 * Try to launch the desktop version using the custom protocol `decentraland://position=x,y&realm=zzz`
 * and return a boolean that represents if a loss of focus was detected on the current window
 * (assuming it was due to the interaction generated by the desktop version)
 */
export const launchDesktopApp = async (options: {
  position?: string
  realm?: string
}) => {
  // prevent launch for desktop and mobile
  if (isElectron() || isMobile()) {
    return false
  }

  const customProtocolParams: string[] = []
  if (options.position) {
    customProtocolParams.push(`position=${options.position}`)
  }

  if (options.realm) {
    customProtocolParams.push(`realm=${options.realm}`)
  }

  const customProtocolTarget = `decentraland://${customProtocolParams.join(
    "&"
  )}`

  // assume that the desktop version is installed only if
  // we detect a loss of focus on window
  let installed = false
  const isInstalled = () => {
    installed = true
  }
  window.addEventListener("blur", isInstalled)

  // inject an iframe that open the desktop version
  // NOTE: this can be also achieved with
  // ```js
  //   window.location.href = customProtocolTarget
  // ```
  // but in safari redirects into an invalid url if the desktop
  // client is not installed
  const iframe = document.createElement("iframe")
  iframe.setAttribute("style", "display: none")
  iframe.src = customProtocolTarget
  document.body.appendChild(iframe)

  // wait half of a second to detect the loss of focus because
  // the time it takes for the `blur` event to be fired varies
  // depending on the browser
  return new Promise<boolean>((resolve) => {
    setTimeout(() => {
      window.removeEventListener("blur", isInstalled)
      document.body.removeChild(iframe)
      resolve(installed)
    }, 500)
  })
}
